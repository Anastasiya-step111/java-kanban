import java.util.HashMap;

public class TaskManager {
    private static int taskCount;

    // Хранилища для разных типов задач
    private HashMap<Integer, Task> tasks = new HashMap<>();
    private HashMap<Integer, Epic> epics = new HashMap<>();
    private HashMap<Integer, Subtask> subtasks = new HashMap<>();


    public static int addTaskAndGetId() {
        taskCount++;
        return taskCount;
    }
}

/*Менеджер
Кроме классов для описания задач, вам нужно реализовать класс для объекта-менеджера. Он будет запускаться на старте
программы и управлять всеми задачами. В нём должны быть реализованы следующие функции:
Возможность хранить задачи всех типов. Для этого вам нужно выбрать подходящую коллекцию.
Методы для каждого из типов задач (Задача/Эпик/Подзадача):
 a. Получение списка всех задач.
 b. Удаление всех задач.
 c. Получение по идентификатору.
 d. Создание. Сам объект должен передаваться в качестве параметра.
 e. Обновление. Новая версия объекта с верным идентификатором передаётся в виде параметра.
 f. Удаление по идентификатору.
Дополнительные методы:
a. Получение списка всех подзадач определённого эпика.
Управление статусами осуществляется по следующему правилу:
 a. Менеджер сам не выбирает статус для задачи. Информация о нём приходит менеджеру вместе с
 информацией о самой задаче. По этим данным в одних случаях он будет сохранять статус, в других
 будет рассчитывать.
 b. Для эпиков:
если у эпика нет подзадач или все они имеют статус NEW, то статус должен быть NEW.
если все подзадачи имеют статус DONE, то и эпик считается завершённым — со статусом DONE.
во всех остальных случаях статус должен быть IN_PROGRESS.*/


/*Хранение задач
Для хранения задач вам нужно:
1) получать задачи по идентификатору;
2) выводить списки задач разных типов.
Один из способов организовать такое хранение — это присвоить соответствие между идентификатором и
 задачей при помощи HashMap. Поскольку идентификатор не может повторяться (иначе он не был
 бы идентификатором), такой подход позволит быстро получать задачу.
Чтобы получать разные типы задач, вы можете создать три структуры HashMap: по одной на каждый из
видов задач.*/

/*Для генерации идентификаторов можно использовать числовое поле-счётчик
внутри класса TaskManager, увеличивая его на 1, когда нужно получить новое значение.
Также советуем применить знания о методах equals() и hashCode(), чтобы
реализовать идентификацию задачи по её id.  При этом две задачи с одинаковым id
должны выглядеть для менеджера как одна и та же. */